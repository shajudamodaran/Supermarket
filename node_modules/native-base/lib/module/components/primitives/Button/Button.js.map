{"version":3,"sources":["Button.tsx"],"names":["Button","ref","children","isLoadingText","startIcon","endIcon","spinner","props","_text","_hover","_pressed","_focus","_focusVisible","_stack","resolvedProps","pressableProps","isDisabled","isLoading","React","isValidElement","Children","map","child","index","cloneElement","key","accessibilityRole","undefined","isPressed","isHovered","isFocusVisible","focusTextProps","hoverTextProps","pressedTextProps","boxChildren","color"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Spinner from '../Spinner';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { default as Box, IBoxProps } from '../Box';\nimport HStack from '../Stack/HStack';\nimport { Pressable } from '../Pressable';\nimport type { IButtonProps } from './types';\n\nconst Button = (\n  {\n    children,\n    isLoadingText,\n    startIcon,\n    endIcon,\n    spinner,\n    ...props\n  }: IButtonProps & IBoxProps,\n  ref: any\n) => {\n  const {\n    _text,\n    _hover,\n    _pressed,\n    _focus,\n    _focusVisible,\n    _stack,\n    ...resolvedProps\n  } = usePropsResolution('Button', props);\n\n  const pressableProps = {\n    ...resolvedProps,\n    _hover,\n    _pressed,\n    _focus,\n    _focusVisible,\n  };\n\n  const { isDisabled, isLoading } = props;\n\n  if (endIcon && React.isValidElement(endIcon)) {\n    endIcon = React.Children.map(\n      endIcon,\n      (child: JSX.Element, index: number) => {\n        return React.cloneElement(child, {\n          key: `button-end-icon-${index}`,\n          ..._text,\n          ...child.props,\n        });\n      }\n    );\n  }\n  if (startIcon && React.isValidElement(startIcon)) {\n    startIcon = React.Children.map(\n      startIcon,\n      (child: JSX.Element, index: number) => {\n        return React.cloneElement(child, {\n          key: `button-start-icon-${index}`,\n          ..._text,\n          ...child.props,\n        });\n      }\n    );\n  }\n\n  return (\n    <Pressable\n      disabled={isDisabled || isLoading}\n      ref={ref}\n      {...pressableProps}\n      accessibilityRole={props.accessibilityRole ?? 'button'}\n      opacity={isDisabled || isLoading ? 0.5 : undefined}\n    >\n      {/* TODO : Replace Render props with Context Hook */}\n      {({ isPressed, isHovered, isFocusVisible }: any) => {\n        const focusTextProps = isFocusVisible &&\n          _focus?._text && { ..._focus._text };\n        const hoverTextProps = isHovered &&\n          _hover?._text && { ..._hover._text };\n        const pressedTextProps = isPressed &&\n          _pressed?._text && { ..._pressed._text };\n\n        const boxChildren =\n          isLoading && isLoadingText ? isLoadingText : children;\n\n        return (\n          <HStack {..._stack}>\n            {startIcon && !isLoading ? startIcon : null}\n            {isLoading ? (\n              spinner ? (\n                spinner\n              ) : (\n                <Spinner color={_text?.color} size=\"sm\" />\n              )\n            ) : null}\n            {boxChildren ? (\n              <Box\n                _text={{\n                  ..._text,\n                  ...hoverTextProps,\n                  ...focusTextProps,\n                  ...pressedTextProps,\n                }}\n              >\n                {isLoading && isLoadingText ? isLoadingText : children}\n              </Box>\n            ) : null}\n            {endIcon && !isLoading ? endIcon : null}\n          </HStack>\n        );\n      }}\n    </Pressable>\n  );\n};\n\nexport default memo(forwardRef(Button));\n"]}