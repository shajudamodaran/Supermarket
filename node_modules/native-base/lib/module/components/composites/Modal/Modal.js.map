{"version":3,"sources":["Modal.tsx"],"names":["Modal","ref","children","isOpen","onClose","defaultIsOpen","initialFocusRef","finalFocusRef","avoidKeyboard","closeOnOverlayClick","isKeyboardDismissable","overlayVisible","animationPreset","rest","bottomInset","contentSize","restThemeProps","value","defaultValue","onChange","val","visible","setVisible","enabled","callback","child","undefined","handleClose","StyleSheet","absoluteFill"],"mappings":"ohBAAA,qDACA,qDACA,yCACA,6DACA,2CACA,+CACA,qCAKA,kCACA,iEAEA,0DACA,qC,iIAEA,GAAMA,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAgBZC,GAhBY,CAiBT,IAfDC,CAAAA,QAeC,MAfDA,QAeC,CAdDC,MAcC,MAdDA,MAcC,CAbDC,OAaC,MAbDA,OAaC,CAZDC,aAYC,MAZDA,aAYC,CAXDC,eAWC,MAXDA,eAWC,CAVDC,aAUC,MAVDA,aAUC,CATDC,aASC,MATDA,aASC,4BARDC,mBAQC,CARDA,mBAQC,gCARqB,IAQrB,kDAPDC,qBAOC,CAPDA,qBAOC,gCAPuB,IAOvB,gDANDC,cAMC,CANDA,cAMC,8BANgB,IAMhB,+CAJDC,eAIC,CAJDA,eAIC,+BAJiB,MAIjB,sBAHEC,IAGF,gOACH,GAAMC,CAAAA,WAAW,CAAG,mCAApB,CADG,wBAEwC,8BAAmB,OAAnB,CAA4BD,IAA5B,CAFxC,CAEKE,WAFL,qBAEKA,WAFL,CAEqBC,cAFrB,sGAI2B,gCAAqB,CACjDC,KAAK,CAAEd,MAD0C,CAEjDe,YAAY,CAAEb,aAFmC,CAGjDc,QAAQ,CAAE,kBAACC,GAAD,CAAS,CACjB,GAAI,CAACA,GAAL,CAAUhB,OAAO,EAAIA,OAAO,EAAlB,CACX,CALgD,CAArB,CAJ3B,6EAIIiB,OAJJ,2BAIaC,UAJb,2BAYH,kCAAuB,CACrBC,OAAO,CAAEb,qBAAqB,EAAIW,OADb,CAErBG,QAAQ,CAAE,0BAAMF,CAAAA,UAAU,CAAC,KAAD,CAAhB,EAFW,CAAvB,EAKA,GAAIG,CAAAA,KAAK,CACP,6BAAC,YAAD,wBACE,MAAM,CAAEjB,aAAa,CAAGM,WAAW,CAAG,IAAjB,CAAwBY,SAD/C,EAEMV,cAFN,EAGE,GAAG,CAAEf,GAHP,CAIE,aAAa,CAAC,UAJhB,8EAMGC,QANH,CADF,CAWA,MACE,8BAAC,0BAAD,8EACE,6BAAC,qBAAD,CAAc,QAAd,EACE,KAAK,CAAE,CACLyB,WAAW,CAAE,6BAAML,CAAAA,UAAU,CAAC,KAAD,CAAhB,EADR,CAELP,WAAW,CAAXA,WAFK,CAGLT,eAAe,CAAfA,eAHK,CAILC,aAAa,CAAbA,aAJK,CADT,6EAQE,6BAAC,kBAAD,EACE,YAAY,CAAE,GADhB,CAEE,aAAa,CAAE,GAFjB,CAGE,EAAE,CAAEc,OAHN,CAIE,KAAK,CAAEO,wBAAWC,YAJpB,6EAMGlB,cAAc,EACb,6BAAC,iBAAD,EACE,OAAO,CAAE,kBAAM,CACbF,mBAAmB,EAAIa,UAAU,CAAC,KAAD,CAAjC,CACD,CAHH,8EAPJ,CARF,CAsBGV,eAAe,GAAK,OAApB,CACC,6BAAC,kBAAD,EAAO,EAAE,CAAES,OAAX,CAAoB,QAAQ,CAAE,GAA9B,8EACE,6BAAC,iBAAD,EACE,OAAO,CAAEA,OADX,CAEE,SAAS,CAAEA,OAAO,EAAI,CAACf,eAFzB,CAGE,YAAY,CAAEe,OAAO,EAAI,CAACd,aAH5B,8EAKGkB,KALH,CADF,CADD,CAWC,6BAAC,kBAAD,EACE,YAAY,CAAE,GADhB,CAEE,aAAa,CAAE,GAFjB,CAGE,EAAE,CAAEJ,OAHN,CAIE,KAAK,CAAEO,wBAAWC,YAJpB,8EAME,6BAAC,iBAAD,EACE,OAAO,CAAER,OADX,CAEE,SAAS,CAAEA,OAAO,EAAI,CAACf,eAFzB,CAGE,YAAY,CAAEe,OAAO,EAAI,CAACd,aAH5B,+EAKGkB,KALH,CANF,CAjCJ,CADF,CADF,CAqDD,CAlGD,C,aAoGe,gBAAK,sBAAWzB,KAAX,CAAL,C","sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport { OverlayContainer } from '@react-native-aria/overlays';\nimport { StyleSheet } from 'react-native';\nimport Backdrop from '../Backdrop';\nimport { Slide } from '../Transitions';\nimport { FocusScope } from '@react-native-aria/focus';\nimport {\n  useControllableState,\n  usePropsResolution,\n  useKeyboardDismissable,\n} from '../../../hooks';\nimport { ModalContext } from './Context';\nimport Box from '../../primitives/Box';\nimport type { IModalProps } from './types';\nimport { Fade } from '../../composites/Transitions';\nimport { useKeyboardBottomInset } from '../../../utils';\n\nconst Modal = (\n  {\n    children,\n    isOpen,\n    onClose,\n    defaultIsOpen,\n    initialFocusRef,\n    finalFocusRef,\n    avoidKeyboard,\n    closeOnOverlayClick = true,\n    isKeyboardDismissable = true,\n    overlayVisible = true,\n    //@ts-ignore - internal purpose only\n    animationPreset = 'fade',\n    ...rest\n  }: IModalProps,\n  ref: any\n) => {\n  const bottomInset = useKeyboardBottomInset();\n  const { contentSize, ...restThemeProps } = usePropsResolution('Modal', rest);\n\n  const [visible, setVisible] = useControllableState({\n    value: isOpen,\n    defaultValue: defaultIsOpen,\n    onChange: (val) => {\n      if (!val) onClose && onClose();\n    },\n  });\n\n  useKeyboardDismissable({\n    enabled: isKeyboardDismissable && visible,\n    callback: () => setVisible(false),\n  });\n\n  let child = (\n    <Box\n      bottom={avoidKeyboard ? bottomInset + 'px' : undefined}\n      {...restThemeProps}\n      ref={ref}\n      pointerEvents=\"box-none\"\n    >\n      {children}\n    </Box>\n  );\n\n  return (\n    <OverlayContainer>\n      <ModalContext.Provider\n        value={{\n          handleClose: () => setVisible(false),\n          contentSize,\n          initialFocusRef,\n          finalFocusRef,\n        }}\n      >\n        <Fade\n          exitDuration={150}\n          entryDuration={200}\n          in={visible}\n          style={StyleSheet.absoluteFill}\n        >\n          {overlayVisible && (\n            <Backdrop\n              onPress={() => {\n                closeOnOverlayClick && setVisible(false);\n              }}\n            />\n          )}\n        </Fade>\n        {animationPreset === 'slide' ? (\n          <Slide in={visible} duration={200}>\n            <FocusScope\n              contain={visible}\n              autoFocus={visible && !initialFocusRef}\n              restoreFocus={visible && !finalFocusRef}\n            >\n              {child}\n            </FocusScope>\n          </Slide>\n        ) : (\n          <Fade\n            exitDuration={100}\n            entryDuration={200}\n            in={visible}\n            style={StyleSheet.absoluteFill}\n          >\n            <FocusScope\n              contain={visible}\n              autoFocus={visible && !initialFocusRef}\n              restoreFocus={visible && !finalFocusRef}\n            >\n              {child}\n            </FocusScope>\n          </Fade>\n        )}\n      </ModalContext.Provider>\n    </OverlayContainer>\n  );\n};\n\nexport default memo(forwardRef(Modal));\n"]}